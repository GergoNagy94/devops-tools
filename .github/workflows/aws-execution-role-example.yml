name: Example AWS Execution Role Setup

on:
  workflow_dispatch:
    inputs:
      config-file:
        description: 'Path to configuration file (e.g., config/dev.json)'
        required: true
        default: 'config/dev.json'

jobs:
  setup-execution-role:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup AWS execution role
        id: setup-role
        uses: GergoNagy94/devops-tools/aws-execution-role@v2
        with:
          config-file: ${{ github.event.inputs.config-file }}

      - name: Display results
        run: |
          echo "Successfully created/updated IAM role:"
          echo "Role Name: ${{ steps.setup-role.outputs.role-name }}"
          echo "Role ARN: ${{ steps.setup-role.outputs.role-arn }}"
          
          # The role is now ready for use in Terragrunt assume_role configurations
          echo ""
          echo "You can now use this role in your Terragrunt configuration:"
          echo "iam_role = \"${{ steps.setup-role.outputs.role-arn }}\""

      - name: Verify role creation
        run: |
          # Verify the role exists and has the expected policies
          aws iam get-role --role-name "${{ steps.setup-role.outputs.role-name }}"
          echo ""
          echo "Attached managed policies:"
          aws iam list-attached-role-policies --role-name "${{ steps.setup-role.outputs.role-name }}"
          echo ""
          echo "Inline policies:"
          aws iam list-role-policies --role-name "${{ steps.setup-role.outputs.role-name }}"